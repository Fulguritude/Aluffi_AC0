Multiversity Algebra Chapter 0 Reading Group

Summaries

Chapter I)

Section 1) Explains fundamentals of set theory and basic set operations

Section 2) Explains set relations, set functions and some more advanced
set operations

Section 3) Presents categories, and multiple examples of categories.
Some are simple, some are advanced.

Lexicon

Chapter 1

Section 1

-   Set (not a multiset)

-   ∅: the empty set, containing no elements;

-   N: the set of natural numbers (that is, nonnegative integers);

-   Z: the set of integers;

-   Q: the set of rational numbers;

-   R: the set of real numbers;

-   C: the set of complex numbers.

-   Singleton:

-   ∃: existential quantifier, "there exists"

-   ∀: universal quantifier, "for all"

-   inclusion:

-   subset:

-   cardinal:

-   powerset:

-   ∪: the union:

-   ∩: the intersection:

-   $\\$: the difference:

-   ∐: the disjoint union:

-   ×: the (Cartesian) product:

-   complement of a subset

-   relation

-   order relation

-   equivalence relation

-   reflexivity

-   symmetry

-   antisymmetry

-   transitivity

-   partition

-   quotient by an equivalence relation

Section 2

-   function

-   graph

-   (categorical, function) diagram

-   identity function

-   kernel (of a function)

-   image (of a function)

-   restriction (of a function to a subset)

-   multiset

-   composition

-   commutative (diagram)

-   injection

-   surjection

-   bijection

-   isomorphism

-   inverse

-   pre-inverse, right-inverse

-   post-inverse, left-inverse

-   monomorphism

-   epimorphism

-   natural projection

-   natural injection

-   canonical decomposition (of a function)

Section 3

-   category

-   object

-   morphism

-   endomorphism

-   operation

-   discrete category

-   small category

-   locally small category

-   slice category

-   coslice category

-   comma category (mentioned, undefined)

-   pointed set

-   C^(A, B) category ??

Exercise solutions

Chapter I)

Section 1)

1.1)

In a nutshell, Russell’s paradox proves, by contradiction, that certain
mathematical collections cannot be sets. It posits the existence of a
"set of all sets that don’t contain themselves". Such a set can neither
contain itself (since in that case, it would be a "set that does contain
itself", and should be excluded); nor can it exclude it itself (since in
that case, it would be a "set that doesn’t contain itself", and should
be included).

1.2)

Prove that any equivalence relation over a set S defines a partition of
𝒫_(S).

a) 𝒫_(S) has no empty elements: any element in S is part of at least one
equivalence class, the class containing at least that element itself.
Since there is no equivalence class constructed independently from
elements, there are no empty equivalence classes.

b) Elements of 𝒫_(S) are disjoint: suppose there is an element x that is
part of A and B, two distinct equivalence classes. ∀a ∈ A, x ∼ a and
∀b ∈ B, x ∼ b. By transivity through x, ∀a ∈ A, ∀b ∈ B, a ∼ b.
Therefore, A and B are the same equivalence class: A = B. Contradiction.
Therefore all elements of 𝒫_(S) are disjoint subsets of S.

c) The union of all elements of 𝒫_(S) makes up S: suppose ∃x ∈ S such
that x ∉ ⋃_(S_(i) ∈ 𝒫_(S))S_(i). From the argument made in (a), x exists
in at least one equivalence class, the class which contains only x
itself. This is one of ou S_(i) sets. Contradiction. Therefore,
⋃_(S_(i) ∈ 𝒫_(S))S_(i) = S

1.3)

Given a partition 𝒫 on a set S, show how to define a relation ∼ on S
such that P is the corresponding partition.

The insight here is to build an equivalence relation such that two
elements are equivalent if and only if they are part of the same subset
of S, which is understood as their common equivalence class.

We define ∼ such that
∀S_(i), S_(j) ∈ 𝒫, ∀x ∈ S_(i), ∀y ∈ S_(j), x ∼ y ⇔ S_(i) = S_(j).

Let us prove that ∼ is an equivalence relation.

a) Reflexivity:
∀A ∈ 𝒫, ∀x ∈ A, A = A ⇒ x ∼ x

b) Symmetry:
∀S_(i), S_(j) ∈ 𝒫, ∀x ∈ S_(i), ∀y ∈ S_(j), x ∼ y ⇔ S_(i) = S_(j) ⇔ S_(j) = S_(i) ⇔ y ∼ x

c) Transitivity:
$$\forall S_i, S_j, S_k \in \mathcal{P}, \forall x \in S_i, \forall y \in S_j, \forall z \in S_k, x \sim y \cap y \sim z \\
    \Leftrightarrow \\
S_i = S_j \cap S_j = S_k \Rightarrow S_i = S_k \\
    \Leftrightarrow \\
x \sim z$$

Therefore, ∼ is indeed an equivalence relation, and is generated
uniquely by the partition.

1.4)

How many different equivalence relations may be defined on the set
{1, 2, 3}?

If we start with the 1 element set, we have only one possible partition,
one possible equivalence class.

With the 2 element set, there are 2 partitions, {{1, 2}} and {{1}, {2}}.

With the 3 element set, there is:

-   1 partition of type 1-1-1: {{1}, {2}, {3}}.

-   3 partitions of type 2-1: {{1}, {2, 3}}, {{2}, {1, 3}}, and
    {{3}, {1, 2}}.

-   1 partition of type 3: {{1, 2, 3}}.

Hence, there are five equivalence classes on the 3 element set.

See the Bell numbers: https://oeis.org/A000110

1.5)

Give an example of a relation that is reflexive and symmetric, but not
transitive. What happens if you attempt to use this relation to define a
partition on the set?

In terms of graph theory, if we express a set with an internal relation
as a graph, we can represent elements are nodes and relationships are
edges. Reflexivity means that every node has a loop (unary, self-edge).
Symmetry means that the graph is not directed (since every relationship
goes both ways). Transitivity means that every connected subset of nodes
is a maximal clique (synonymously, every connected component is a
complete subgraph).

In a relation which is reflexive and symmetric, but not transitive, you
would have connected components of this graph which are not cliques. For
these, there is ambiguity as to how you would group their nodes. Two
obvious choices would be either:

-   to remove the minimal number of edges to obtain n distinct cliques
    (thereby gaining the transitive restriction of the relation) from a
    given non-clique;

-   to complete the connected subgraph into a clique (thereby gaining
    the transitive closure of the relation).

1.6)

Define a relation ∼ on the set ℝ of real numbers, by setting
a ∼ b ⇔ b − a ∈ ℤ. Prove that this is an equivalence relation, and find
a ’compelling’ description for ℝ/∼. Do the same for the relation ≈ on
the plane ℝ × ℝ defined by declaring
(a₁, a₂) ≈ (b₁, b₂) ⇔ b₁ − a₁ ∈ ℤ and b₂ − a₂ ∈ ℤ.

b − a ∈ ℤ means that 2 real numbers differ by an integral amount. This
means that the equivalence relation algebraically describes the idea
that "with this relation, 2 real numbers are the same iff they have the
same fractional component x (or 1 − x for negative numbers)". Eg,
4.76 ∼ 1024.76 ∼  − 5.34, since  − 5.34 + 10 = 4.76, etc.

To make an algebraic quotient of a set by an equivalence relation, we
take the function which maps each element to its corresponding
equivalence class, in the set (partition) containing these equivalence
class. Intuitively, this is similar to keeping only one representative
element per equivalence class. For the example class above, we can keep
the representative 0.76. There is such an equivalence class for every
fractional part possible, that is, one for every number in [0, 1[. The
corresponding map is the "real remainder of division modulo 1". This map
is well-defined because each real number has only one output for this
map, and all real numbers that are equivalent through ∼ are mapped to
the same value in the output set.

We should also notice that since 0 ∼ 1, this space loops around on
itself. Intuitively, if you increase linearly in the input space ℝ, it
goes back to 0 after 0.9999999... in the output space. This output space
is thus a circle of perimeter 1.

Similarly, b₁ − a₁ ∈ ℤ and b₂ − a₂ ∈ ℤ means that 2 points in the 2D
plane are the same iff they differ in each coordinate by an integral
amount. This boils down to combining two such loops from the first part
of the exercise: one in the x direction and one in the y direction: what
this gives is the small square [0, 1[ × [0, 1[, which loops to x = 0
(resp. y = 0) when x = 1 (resp. y = 1) is reached. This space functions
like a small torus, of area 1.

Section 2)

2.1)

How many different bijections are there between a set S with n elements
and itself?

Any bijection is a choice of a pairs from 2 sets of the same size, where
each element is used only once, and each pair has one element from each
set. At first there are n choices in each set. If we pick a pair, we
pick from n² possibilities

There are then (n − 1)² choices of pairs left, etc.

Ccl°: $\prod_{i=1}^{i=n} i^2 = (n!)^2$

2.2)

Prove that a function has a right-inverse iff it is surjective (can use
AC)

Let f ∈ (A → B).

2.2.a) ⇒: Suppose that f has a right-inverse (pre-inverse).

We have ∃g ∈ (B → A), f ∘ g = id_(B)

Suppose that f is not a a surjection. This means
∃b ∈ B, ∄a ∈ A, b = f(a)

f(g(b)) = id_(B)(b) = b Necessarily, g(b) is such an a, so
∃a ∈ A, b = f(a). Contradiction.

Ccl°:: f is a surjection.

2.2.b) ⇐: Suppose that f is a surjection.

∀b ∈ B, ∃a ∈ A, b = f(a)

We will construct a pre-inverse for f.

The insight here is to realize that a surjection divides its input set
into a partition, where each 2-by-2 disjoint subset corresponds to
f^( − 1)({q}), for every q in the output set. More formally, each
"fiber" (preimage of a singleton) is a disjoint subset of the input set,
and the union of fibers is the input set itself. You can see this in the
following diagram:

(add diagram) 1234 to ab 1a 2a (fiber from a) 3b 4b (fiber from b)
https://tex.stackexchange.com/questions/157450/producing-a-diagram-showing-relations-between-sets
https://tex.stackexchange.com/questions/79009/drawing-the-mapping-of-elements-for-sets-in-latex

Using AC, we select a single element from each such fiber. For each
q ∈ B, we name p_(q) ∈ f^( − 1)({q}) the chosen element. We define g as
g ∈ (B → A), g = (q ↦ p_(q)). With this, ∀b ∈ B, f ∘ g(b) = b, and so
f ∘ g = id_(A). Thus, f has a preinverse.

A summary of this idea: all surjection preinverses are simply a choice
of a representative for each fiber of the surjection as the output to
the respective singleton.

2.3)

Prove that the inverse of a bijection is a bijection, and that the
composition of two bijections is a bijection.

2.3.a) Using the fact that a function is a bijection iff it has a two-sided 

inverse (

Corollary 2.2)

we can see from this defining fact,
f ∈ (A → B)bijective ⇔,∃f^( − 1) ∈ (B → A), f^( − 1) ∘ f = id_(A) and f ∘ f^( − 1) = id_(B)
that f is naturally f^( − 1)’s (unique) two-sided inverse, and so
f^( − 1) is also a bijection.

2.3.b) Let be f ∈ (A → B), g ∈ (B → C), both bijective (hence with 

inverses in the respective function spaces). Let h ∈ (A → C), h = g ∘ f
and h^( − 1) ∈ (C → A), h^( − 1) = f^( − 1) ∘ g^( − 1). We have:

$$\begin{aligned}
h^{-1} \circ h &= (f^{-1} \circ g^{-1}) \circ (g \circ f) \\
               &=  f^{-1} \circ g^{-1}  \circ  g \circ f  \\
               &=  f^{-1} \circ          id_B    \circ f  \\
               &=  f^{-1} \circ                        f  \\
               &=  id_A
\end{aligned}$$

$$\begin{aligned}
h \circ h^{-1} &= (g \circ f) \circ (f^{-1} \circ g^{-1}) \\
               &=  g \circ f  \circ  f^{-1} \circ g^{-1}  \\
               &=  g \circ     id_B         \circ g^{-1}  \\
               &=  g \circ                        g^{-1}  \\
               &=  id_C
\end{aligned}$$

Therefore h and h^( − 1) are two-sided inverses of each other, and thus
bijections. From this we conclude that the composition of any two
bijections is also a bijection.

2.4)

Prove that ‘isomorphism’ is an equivalence relation (on any set of
sets).

2.4.a) Problem statement

Let 𝒜 be a set of sets. We define the relation ≃ between the elements of
𝒜 as the following:

∀X, Y ∈ 𝒜, X ≃ Y ⇔ there exists a bijection between X and Y

Let us show that ≃ is an equivalence relation.

2.4.b) Reflexivity

For any set A ∈ 𝒜, the identity mapping on A is a bijection. This means
that ∀A ∈ 𝒜, A ≃ A, ie, ≃ is reflexive.

2.4.c) Symmetry

$$\begin{aligned}
\forall X, Y \in \mathcal{A}, \; X \simeq Y & \Rightarrow \exists f      \in (X \to Y) \text{ bijective} \\
                                            & \Rightarrow \exists f^{-1} \in (Y \to X) \text{ bijective} \\
                                            & \Rightarrow Y \simeq X
\end{aligned}$$

Therefore, ≃ is symmetric.

2.4.d) Transitivity

Let be X, Y, Z ∈ 𝒜. Suppose that X ≃ Y and Y ≃ Z. This means
∃f ∈ (X → Y), g ∈ (Y → Z), both bijections. Let be
h ∈ (X → Z), h = g ∘ f. h is also a bijection since the composition of

two bijections is also a bijection (exercise 2.3)

The existence of h implies X ≃ Z.

Therefore ≃ is transitive.

2.4.e) Conclusion

Isomorphism, ≃, is a relation on an arbitrary set (of sets) which is
always reflexive, symmetric and transitive. It is thus an equivalence
relation.

2.5)

Formulate a notion of epimorphism and prove that epimorphisms and
surjections are equivalent.

See "notes" file: section "Proofs of mono/inj and epi/surj equivalence".

2.6)

With notation as in Example 2.4, explain how any function f ∈ (A → B)
determines a section of π_(A).

A section is the preinverse of a surjection. Here, the surjection in
question is π_(A) the projection of A × B onto A.

Let f ∈ (A → B).

We now consider the function which maps an input a ∈ A of f to its
"geometric representation" (its coordinates in the enclosing space
A × B, corresponding to a point of the graph Γ_(f)).
f̂ ∈ (A → (A × B)), f̂ = ( a ↦ (a, f(a)) )
We notice that f̂(A) = Γ_(f).

Naturally, π_(A) ∘ f̂ = (a ↦ a) = id_(A), therefore, f̂ is a pre-inverse
(section) of π_(A).

This set of relationships can be expressed in the following commutative
diagram:

PS: see "On sections and fibers" in the "notes" file for a worked
example.

2.7)

Let f = (A → B) be any function. Prove that the graph Γ_(f) of f is
isomorphic to A.

Using the elements from the previous exercise, we know that f̂ is
injective from A into A × B. This property is inherited to any
restriction of the codomain Z ⊆ B, and corresponding implied restriction
of the domain to Y = f^( − 1)(Z) ⊆ A. In particular, here, Y = A and
Z = Γ_(f) = f̂(A). We now consider
$\overline{f} \in (A \to \Gamma_f), \overline{f} = (a \mapsto \hat{f}(a))$.
We can see that $\overline{f}$ is injective from being a restriction of
an injective function to a smaller codomain. We also know that
$\overline{f}$ is surjective, since its domain is its image. Therefore,
$\overline{f}$ is a bijection. This means that A ≃ Γ_(f).

2.8)

Describe as explicitly as you can all terms in the canonical
decomposition of the function f ∈ (ℝ → ℂ) defined by f = (r ↦ e^(2πir)).
(This exercise matches one assigned previously, which one?)

Firstly, elements of ℝ are equivalent by this map (they have the same
output) if they vary by 1 from each other. This is a reference to the
equivalence relation ∼ in exercise 1.6. Therefore, we will use
ℝ/ ∼  ≃ S¹ in our decomposition. Obviously, the map from (ℝ → ℝ/ ∼ ),
which maps each element of ℝ to respective their equivalence class is a
surjection (since there’s no empty equivalence class).

Secondly, as mentioned, we have a bijection f̃ between ℝ/∼ and S¹, the
circle group of unit complex numbers, namely f̃ = (x ↦ e^(2πix), where
each element x of ℝ/∼ can be understood to correspond to a (class
representative) value in the interval [0, 1[.

Finally, we do the canonical injection of S¹ into its superset ℂ.

2.9)

Show that if A ≃ A′ and B ≃ B′ , and further A ∩ B = ∅ and A′ ∩ B′ = ∅,
then A ∪ B ≃ A′ ∪ B′. Conclude that the operation A∐B (as described in
§1.4) is well-defined up to isomorphism.

We suppose the aforementioned.

Let f_(A) be a bijection from A → A′, and f_(B) be a bijection from
B → B′.

We define the following:

$$f \in (A \cup B \to A' \cup B'),
\text{ such that }
\begin{cases}
    \forall a \in A, \; f(a) = f_A(a) \\
    \forall b \in B, \; f(b) = f_B(b)
\end{cases}$$

This function is a well-defined function, since A ∩ B = ∅: every element
of the domain has one, and only one, possible image.

Similarly, we define:

$$g \in (A' \cup B' \to A \cup B),
\text{ such that }
\begin{cases}
    \forall a \in A', \; g(a) = f_A^{-1}(a) \\
    \forall b \in B', \; g(b) = f_B^{-1}(b)
\end{cases}$$

Similarly, because A′ ∩ B′ = ∅, g is well-defined.

Let us study g ∘ f. We have:
$$\begin{cases}
    \forall a \in A, \; g(f(a)) = f_A^{-1}(f_A(a)) = a \\
    \forall b \in B, \; g(f(b)) = f_B^{-1}(f_B(b)) = b
\end{cases}$$

Hence, g ∘ f = id_(A ∪ B). Similarly, f ∘ g = id_(A′ ∪ B′). Therefore,
g = f^( − 1), f is a bijection, and A ∪ B ≃ A′ ∪ B′.

We’ll now do a shift in notation. Let be some arbitrary sets A and B.
Let be A₁, A₂, B₁, B₂ such that A₁ = {1} × A, A₂ = {2} × A,
B₁ = {1} × B, and B₂ = {2} × B. This means A ≃ A₁, A ≃ A₂, B ≃ B₁, and
B ≃ B₂. It also means A₁ ∩ A₂ = ∅ and B₁ ∩ B₂ = ∅. From the above, this
implies A₁ ∪ B₁ ≃ A₂ ∪ B₂.

This means that the disjoint union of A and B is indeed well-defined, up
to isomorphism: so long as 2 respective copies of A and B are made in a
way that their intersection is empty, the 2 respective unions of 1 copy
each will be isomorphic.

2.10)

Show that if A and B are finite sets, then |B^(A)| = |B|^(|A|).

The number of |B^(A)| functions in B^(A) = (A → B) can be counted in the
following way.

For each element a of A, of which there are |A|, we can pick any element
of |B| as the image. This means |B| × ... × |B|, a total of |A| times.
Hence, |B^(A)| = |B|^(|A|).

2.11)

In view of Exercise 2.10, it is not unreasonable to use 2^(A) to denote
the set of functions from an arbitrary set A to a set with 2 elements
(say 𝔹 = {0, 1}). Prove that there is a bijection between 2^(A) and the
power set 𝒫(A) of A.

Simply put, every subset A_(i) of A is built through a series of |A|
choices: for each element a in A, do we keep the element a in our subset
A_(i) (output 1) or do we remove it (output 0) ? It is then easy to see
that such a series of choices can easily be encoded as a unique function
in A → 𝔹. The totality of such series of choices thus corresponds both
to the space A → 𝔹, and to the powerset 𝒜, and there is a bijection
between the two.

Section 3)

3.1)

Let 𝒞 be a category. Consider a structure 𝒞^(op) with: -
Obj(𝒞^(op)) ≔ Obj(𝒞); - for A, B objects of 𝒞^(op) (hence, objects of
𝒞), Hom_(𝒞^(op))(A, B) ≔ Hom_(𝒞)(B, A) Show how to make this into a
category.

3.1.a) Composition

First, to make things clearer and more rigorous, let us distinguish
composition in 𝒞 as ∘ and composition in 𝒞^(op) as ⋆. We define ⋆ as:
$$\begin{aligned}
    & \forall f \in Hom_{\mathcal{C}^{op}} (B, A) = Hom_{\mathcal{C}} (A, B), \\
    & \forall g \in Hom_{\mathcal{C}^{op}} (C, B) = Hom_{\mathcal{C}} (B, C), \\
    & \exists h \in Hom_{\mathcal{C}^{op}} (C, A) = Hom_{\mathcal{C}} (A, C), \\
    & f \star g \coloneqq g \circ f = h
\end{aligned}$$

We will now show that 𝒞^(op) with ⋆ verifies the other axioms of a
category (namely identity and assossiativity of composition).

3.1.b) Identity

Since 𝒞 is a category, since 𝒞^(op) has the same objects, and since, by
definition, for all object A, we have
Hom_(𝒞^(op))(A, A) = Hom_(𝒞)(A, A), we can take every
id_(A) ∈ Hom_(𝒞)(A, A) as the same identity in 𝒞^(op). We can verify
that this is compatible with ⋆:

$$\begin{aligned}
    \forall A, B & \in Obj (\mathcal{C})        &=& \;  Obj (\mathcal{C}^{op})        , \\
    \exists id_A & \in Hom_{\mathcal{C}} (A, A) &=& \;  Hom_{\mathcal{C}^{op}} (A, A) , \\
    \exists id_B & \in Hom_{\mathcal{C}} (B, B) &=& \;  Hom_{\mathcal{C}^{op}} (B, B) , \\
    \forall f    & \in Hom_{\mathcal{C}} (A, B) &=& \;  Hom_{\mathcal{C}^{op}} (B, A) , \\
    f            & =   f    \circ id_A          &=& \;  id_A \star f                  , \\
    f            & =   id_B \circ    f          &=& \;  f    \star id_B                 \\
\end{aligned}$$

3.1.c) Associativity

Using associativity in 𝒞, we have:

$$\begin{aligned}
    \forall A, B, C, D & \in Obj (\mathcal{C})        &=& \;  Obj (\mathcal{C}^{op})        , \\
    \forall f          & \in Hom_{\mathcal{C}} (A, B) &=& \;  Hom_{\mathcal{C}^{op}} (B, A) , \\
    \forall g          & \in Hom_{\mathcal{C}} (B, C) &=& \;  Hom_{\mathcal{C}^{op}} (C, B) , \\
    \forall h          & \in Hom_{\mathcal{C}} (C, D) &=& \;  Hom_{\mathcal{C}^{op}} (D, C) , \\
\end{aligned}$$
$$\begin{aligned}
    h \star (g \star f) &=&  h \star (f  \circ g) \\
                        &=& (f \circ  g) \circ h  \\
                        &=&  f \circ  (g \circ h) \\
                        &=&  (g \circ h) \star f  \\
                        &=&  (h \star g) \star f  \\
\end{aligned}$$

Therefore, ⋆ is associative.

We conclude that 𝒞^(op) is a category.

3.2)

If A is a finite set, how large is End_(Set)(A) ?

We know that, in Set, End_(Set)(A) = (A → A) = A^(A). From a previous
exercise, we know that |B^(A)| = |B|^(|)A|, therefore
|End_(Set)(A)| = |A|^(|)A|.

3.3)

Formulate precisely what it means to say that "1_(a) is an identity with
respect to composition" in Example 3.3, and prove this assertion.

Example 3.3 is that of a category over a set S with a (reflexive,
transitive) relation ∼, where the objects of the category are the
elements of S, and the homset between two elements a and b is the
singleton (a, b) if a ∼ b, and ∅ otherwise. Composition ∘ is given by
transitivity of ∼, where (b, c) ∘ (a, b) = (a, c). Reflexivity gives the
identities (id_(a) = (a, a) for any element a).

In this context, to say that "1_(a) is an identity with respect to
composition" means that we can cancel out an element of the form (a, a)
from a composition.

Formally, we have:

∀a, b ∈ S, (b, b) ∘ (a, b) = (a, b) = (a, b) ∘ (a, a)

proving that (b, b) is indeed a post-identity, and (a, a) a
pre-identity, in this context.

3.4)

Can we define a category in the style of Example 3.3, using the relation
< on the set ℤ ?

(Description of example 3.3 in the exercise 3.3 just above.)

Naively, saying like in example 3.3 "there is a singleton homset
Hom(a, b) each time we have a < b", we cannot define such a category,
since < is not reflexive, and we would thus lack identity morphisms.

However, in a roundabout way, we can define a category over the negation
of <: "there is a singleton homset Hom(a, b) each time we DO NOT have
a < b". Namely this corresponds to the relation ≥, which is, itself,
reflexive, transitive (and antisymmetric), and is a valid instance of
the kind of category presented in example 3.3.

In fact, the pair (ℤ,  ≥ ) is an instance of what is called a "totally
ordered set", which is a more restrictive kind of "partially ordered
set" (also called "poset" for short). Consequently, this kind of
category is called a "poset category".

3.5)

Explain in what sense Example 3.4 is an instance of the categories
considered in Example 3.3.

(Description of example 3.3 in the exercise 3.3 just above.)

Example 3.4 describes a category Ŝ where the objects are the subsets of
a set S (equivalently: elements of the powerset 𝒫(S) of S), and
morphisms between two subsets A and B of S are singleton (or empty)
homsets based on whether the inclusion is true (or false).

Inclusion of sets, ⊂, is also an order relation, this time between the
elements of a set of sets (here, 𝒫(S)). This means inclusion is
reflexive, transitive, and antisymmetric. This makes Ŝ a poset category,
and thus another instance of example 3.3.

3.6)

Define a category V by taking Obj(V) = ℕ, and
Hom_(V)(n, m) = Mat_(ℝ)(m, n), the set of m × n matrices with real
entries, for all n, m ∈ ℕ. (I will leave the reader the task to make
sense of a matrix with 0 rows or columns.) Use product of matrices to
define composition. Does this category ’feel’ familiar ?

The formulation of the exercise is strange. It says to use the product
of matrices to define composition, and to have homsets be sets of
matrices, but objects of the category are supposed to be integers. I
don’t know of any matrix with real entries that maps an integer to an
integer in this way.

We thus infer that the meaning of the exercise can be one of two things.

Either we suppose the set of objects could rather be understood as
"something isomorphic to ℕ", ie, the collection of real vector spaces
with finite bases (ie, ∀n ∈ ℕ, ℝ^(n)). In which case, this is just the
category of real vector spaces with finite basis (and linear maps as
morphisms), which is a subcategory of the category real vector spaces
(commonly called Vect_(ℝ)). In this context, any morphism starting from
0 ≃ ℝ⁰ = {0} is just the injection of the origin into the codomain; and
any morphism ending at 0 is the mapping of all elements to the origin.

Otherwise, we understand this as "yes, the objects of the category are
integers: this means you should ignore the actual content of the
matrices, and instead consider only their effect on the dimensionality
of domains and codomains". In this case, this category is a complete
directed graph over ℕ where each edge corresponds to the change in
dimension (from domain to codomain) caused by a given linear map.

3.7)

Define carefully objects and morphisms in Example 3.7, and draw the
diagram corresponding to composition.

Example 3.7 (on coslice categories) refers to example 3.5 (on slice
categories). Let’s go over slice categories (since example 3.5 asks the
reader to "check all [their various properties]").

3.7.1) Slice categories

Slice categories are categories made by singling out an object (say A)
in some parent (larger) category (say 𝒞), and studying all morphisms
into that object. These morphisms become the objects of a new category
(ie, for any Z of 𝒞, f ∈ (Z → A) is an object of the slice category,
called 𝒞_(A) in this context). In the slice category, morphisms are
defined as those morphism in 𝒞 that preserve composition between 2
morphisms into A.

Note that there exist pairs of morphisms f₁ ∈ (Z₁ → A) and f₂ ∈ (Z₂ → A)
between which there is no morphism that exists in the slice category.
One such example we can make is in (Vect_(ℝ))_(ℝ²). If we take the maps:

$$f_1 = \begin{bmatrix} 1 & 0 \\ 0 & 0 \end{bmatrix} \in \mathcal{L}(\mathbb{R}^2)$$
$$f_2 = \begin{bmatrix} 0 & 0 \\ 0 & 1 \end{bmatrix} \in \mathcal{L}(\mathbb{R}^2)$$

There exists no map σ such that the following diagram commutes (since
the output of f₁ will always be null in its second coordinate, and the
output of f₂ will always be null in the first):

Now, let us prove that 𝒞_(A) is indeed a category for an arbitrary
object A of an arbitrary category 𝒞.

3.7.1.a) Identity

A generic identity morphism is expressed diagrammatically in 𝒞_(A) as:

We can see that since f = f ∘ id_(Z) in 𝒞, this is compatible with the
definition of a (pre-/right-)unit morphism in 𝒞_(A). Also, since the
only maps post-f are maps from A → A, we have id_(A) as the
(post-/left-)unit for every morphism f (ie, f = id_(A) ∘ f.

3.7.1.b) Composition

Taking 3 objects of the slice category (f₁ ∈ (Z₁ → A), f₂ ∈ (Z₂ → A) and
f₃ ∈ (Z₃ → A)), and two morphisms (σ_(A) mapping f₁ to f₂ via a
𝒞-morphism σ ∈ (Z₁ → Z₂), and τ_(A) mapping f₂ to f₃ via a 𝒞-morphism
τ ∈ (Z₂ → Z₃)), we have that f₁ = f₂ ∘ σ and f₂ = f₃ ∘ τ. This is
expressed as the following commutative diagram.

Composition of morphisms is then defined as τ_(A)∘_(A)σ_(A) as a mapping
from f₁ to f₃, such that f₁ = f₃ ∘ (τ ∘ σ). This can be understood
through the following commutative diagram:

Which commutes, because we have:

$$\begin{aligned}
    f_1 &=&  f_2              \circ \sigma  \\
        &=& (f_3 \circ  \tau) \circ \sigma  \\
        &=&  f_3 \circ (\tau  \circ \sigma)
\end{aligned}$$

Thus, we have a working composition of morphisms.

3.7.1.c) Associativity

We take 4 objects of the slice category (f₁ ∈ (Z₁ → A), f₂ ∈ (Z₂ → A),
f₃ ∈ (Z₃ → A) and f₄ ∈ (Z₄ → A)), and three morphisms (σ_(A) mapping f₁
to f₂, τ_(A) mapping f₂ to f₃, and υ_(A) mapping f₃ to f₄). Using
composition defined as above, we have

f₁ = f₄ ∘ (υ ∘ (τ ∘ σ)) = f₄ ∘ ((υ ∘ τ) ∘ σ) ⇒ υ_(A) ∘ (τ_(A) ∘ σ_(A)) = (υ_(A) ∘ τ_(A)) ∘ σ_(A)
Through associativity in 𝒞.

3.7.2) Coslice categories

A coslice category 𝒞^(A) is similar, except it takes the morphisms
coming from a chosen object A, rather than those going to this object A.
Below is a commutative diagram in the style of the one of the textbook
for slice categories.

We can similarly show that this also defines a category.

3.7.2.a) Identity

A generic identity morphism is expressed diagrammatically in 𝒞^(A) as:

We can see that since f = id_(Z) ∘ f in 𝒞, this is compatible with the
definition of a (post-/left-)unit morphism in 𝒞^(A). Also, since the
only maps pre-f are maps from A → A, we have id_(A) as the
(pre-/right-)unit for every morphism f (ie, f = f ∘ id_(A).

3.7.2.b) Composition

Taking 3 objects of the slice category (f₁ ∈ (A → Z₁), f₂ ∈ (A → Z₂) and
f₃ ∈ (A → Z₃)), and two morphisms (σ^(A) mapping f₁ to f₂ via a
𝒞-morphism σ ∈ (Z₁ → Z₂), and τ^(A) mapping f₂ to f₃ via a 𝒞-morphism
τ ∈ (Z₂ → Z₃)), we have that f₁ = σ ∘ f₂ and f₂ = τ ∘ f₃. This is
expressed as the following commutative diagram.

Composition of morphisms is then defined as τ^(A)∘^(A)σ^(A) as a mapping
from f₁ to f₃, such that f₃ = (τ ∘ σ) ∘ f₁. This can be understood
through the following commutative diagram:

Which commutes, because we have:

$$\begin{aligned}
    f_3 &=&  \tau \circ                f_2  \\
        &=&  \tau \circ (\sigma  \circ f_1) \\
        &=& (\tau \circ  \sigma) \circ f_1
\end{aligned}$$

Thus, we have a working composition of morphisms.

3.7.2.c) Associativity

We take 4 objects of the slice category (f₁ ∈ (A → Z₁), f₂ ∈ (A → Z₂),
f₃ ∈ (A → Z₃) and f₄ ∈ (A → Z₄)), and three morphisms (σ^(A) mapping f₁
to f₂, τ^(A) mapping f₂ to f₃, and υ^(A) mapping f₃ to f₄). Using
composition defined as above, we have

f₄ = (υ ∘ (τ ∘ σ)) ∘ f₁ = ((υ ∘ τ) ∘ σ) ∘ f₁ ⇒ υ^(A) ∘ (τ^(A) ∘ σ^(A)) = (υ^(A) ∘ τ^(A)) ∘ σ^(A)
Through associativity in 𝒞.

3.8)

A subcategory 𝒞′ of a category 𝒞 consists of a collection of objects of
𝒞, with morphisms Hom_(𝒞′)(A, B) ⊆ Hom_(𝒞)(A, B) for all objects A, B in
Obj(𝒞′), such that identities and compositions in 𝒞 make 𝒞′ into a
category. A subcategory 𝒞′ is full if Hom_(𝒞′)(A, B) = Hom_(𝒞)(A, B) for
all A, B in Obj(𝒞′). Construct a category of infinite sets and explain
how it may be viewed as a full subcategory of Set.

To put it less technically, a "subcategory" 𝒞′ is just "picking only
certain items of a base category 𝒞, and making sure that things stay
closed uneder morphism composition". It is "full" if all morphisms
between the objects that remain are also conserved.

We can construct a category InfSet of infinite sets by taking all the
objects A of Set such that ∄n ∈ ℕ, |A| = n, and only homsets between
these objects. This is clearly a subcategory of Set, since it inherits
all identity morphisms, composition works the same, and so does
associativity; also, restricting the choice of homsets makes it so that
the category is closed (you can’t reach a finite set via a homset that
went from an infinite to a finite set).

For this category to not be full, there would need to be some homset
that loses a morphism, or fully disappears, in the ordeal. However,
there is no restriction as to the kind of morphism that is conserved, so
any homset that is kept is identical to its original version. Finally,
homsets between infinite sets are also infinite sets, so they don’t
disappear in this operation.

Consequently InfSet defined as such is a full subcategory of Set.

3.9)

An alternative to the notion of multiset is obtained by considering sets
endowed with equivalence relations; equivalent elements are taken to be
multiple instances of elements ’of the same kind’. Define a notion of
morphism between such enhanced sets, obtaining a category MSet
containing (a ’copy’ of) Set as a full subcategory. (There may be more
than one reasonable way to do this! This is intentionally an open-ended
exercise.) Which objects in MSet determine ordinary multisets as defined
in §2.2, and how? Spell out what a morphism of multisets would be from
this point of view. (There are several natural notions of morphisms of
multisets. Try to define morphisms in MSet so that the notion you obtain
for ordinary multisets captures your intuitive understanding of these
objects.) [§2.2, §3.2, 4.5]

3.10)

Since the objects of a category 𝒞 are not (necessarily) sets, it is not
clear how to make sense of a notion of ’subobject’ in general. In some
situations it does make sense to talk about subobjects, and the
subobjects of any given object A in 𝒞 are in one-to-one correspondence
with the morphisms A → Ω for a fixed, special object Ω of 𝒞, called a
subobject classifier. Show that Set has a subobject classifier.

3.11)

Draw the relevant diagrams and define composition and identities for the
category 𝒞^(A, B) mentioned in Example 3.9. Do the same for the category
𝒞^(α, β) mentioned in Example 3.10. [§5.5, 5.12]

Extra exercises by/for the group

Chapter I) 1) Set notation)

Write the following in set notation (as a list of numbers, and
algebraically):

-   the set of all odd integers

-   the set of all integers that are not multiples of 3

-   the set of integers from 10 (included) to 20 (included)

-   the set of integers from 10 (included) to 20 (excluded)

-   the set of pairs of integers with both elements of the same value

-   the set of triplets of real numbers that together sum to 1

-   the set of pairs of positive real numbers that together sum to 1

-   the set of n-tuplets (for any n) of real number that together sum to
    1

-   the set of all natural numbers such that there exists at least one
    triplet of positive even numbers which are all different and which
    sum to that number.

Now take the sets in their algebraic notation, and represent them both
as a list of numbers (as a logical sequence or just a couple of
examples), and as a "description" of what they are:

-   {3n + 2 | n ∈ ℕ}

-   {3k + 2 | k ∈ ℤ}

-   {2^(i) | i ∈ [[0, 10]]}

-   {(x, y) ∈ ℝ² | x² + y² = 1}

-   {x ∈ ℝ |  − 2 ≤ x ≤ 2}

-   {(m, n, p) ∈ ℕ³ | m + n + p = 10}

Notes

Chapter 1, Section 1

Go check out the extra exercises on set notation.

Chapter 1, Section 2

On injections and surjections

Injections

Injections (which aren’t also surjections) have multiple left-inverses
(post-inverses). Eg:

A = {a, b}
B = {1, 2, 3}
f : A → B = {(a, 2), (b, 3)}, injective

g₁ : B → A = {(1, a), (2, a), (3, b)}
g₂ : B → A = {(1, b), (2, a), (3, b)}

g₁ ∘ f = g₂ ∘ f = id_(A)

It is precisely the free element with no antecedent in B (here, 1) which
leaves room for multiple choices, but doesn’t affect the overall
inversion process.

Surjections

Surjections (which aren’t also injections) have multiple right-inverses
(pre-inverses), called sections.

B = {1, 2, 3}
A = {a, b}
f : B → A = {(1, a), (2, a), (3, b)}, surjective

g₁ : A → B = {(a, 1), (b, 3)}
g₂ : A → B = {(a, 2), (b, 3)}

f ∘ g₁ = f ∘ g₂ = id_(A)

It is precisely the fact that there are multiple elements that map to
the same element (here, 1 and 2 to a) which leaves room for multiple
choices, but doesn’t affect the overall inversion process.

Cancellations

Function Cancellation Lemma: If a composition of functions cancels out,
then the first of the pair is an injection, and the second of the pair
is a surjection. Algebraically:
$$\forall A, B \in Obj(\textbf{Set}),
f \in (A \to B), g \in (B \to A), \;
    g \circ f = id_A
\Rightarrow
    \begin{cases}
        f \text{ is injective} \\
        g \text{ is surjective}
    \end{cases}$$
Corollary 1: any post-inverse of an injection is a surjection. Corollary
2: any pre-inverse of a surjection is an injection.

Proof: Let be
A, B ∈ Obj(Set), f ∈ (A → B), g ∈ (B → A), g ∘ f = id_(A)

a) Suppose f is not an injection. This means:
∃x, y ∈ B, x ≠ y and g(x) = g(y)
However, with such an f, we have:
g(x) = g(y) ⇒ f(g(x)) = f(g(y)) = id_(A)(x) = id_(A)(y) = x = y
This means that f is an injection. Contradiction. Conclusion: in this
context, f must be an injection.

b) Suppose g is not a surjection. This means:
∃a ∈ A, a ∉ g(B)
Since g ∘ f = id_(A), that means that g(f(a)) = id_(A)(a) = a, this
means that a ∈ g(B). Contradiction. Conclusion: in this context, g must
be a surjection.

On sections and fibers

Section example with a tangent bundle.

Consider the cylinder S¹ × ℝ, and the function f : S¹ × ℝ → S¹, the
projection onto the circle. The cylinder is itself the space in which
one can easily represent maps of (S¹ → ℝ). Each such map corresponds to
a section.

Let be

$$\begin{aligned}
g_1 : S^1    & \longrightarrow  S^1 \times \mathbb{R} \\
      \theta & \longmapsto      (\theta, 1)
\end{aligned}$$

$$\begin{aligned}
g_2 : S^1    & \longrightarrow  S^1 \times \mathbb{R} \\
      \theta & \longmapsto      (\theta, cos(\theta))
\end{aligned}$$

We have
f ∘ g₁ = f ∘ g₂ = id_(S¹)

(TODO add diagrams for S1xR, g1 and g2)

A fiber is the preimage of a singleton. In the case of f above, for
every q ∈ S¹, f^( − 1)(q) is the copy of the real line on the cylinder
that passes by q.

(TODO add diagram)

Alternative characterization of a bijection

"f is bijective" ⇔ ("every element of B has a non-empty fiber"
(surjection) and "every fiber is a singleton" (injection))

On monomorphisms and epimorphisms

Failing the mono/epi condition

Example of failing the monomorphism definition for a non-injection

Monomorphism definition:

f : A → B is a monomorphism  ⇔  ∀Z ∈ Obj(𝒞), ∀g₁, g₂ ∈ Hom(Z, A), (f ∘ g₁ = f ∘ g₂ ⇒ g₁ = g₂)

A = {a, b, c}
B = {1, 2}
Z = {x, y}
f : A → B = {(a, 1), (b, 1), (c, 2)}, not injective

g₁ : Z → A = {(x, a), (y, c)}
g₂ : Z → A = {(x, b), (y, c)}

f ∘ g₁ = f ∘ g₂ = {(x, 1), (y, 2)} ∈ (Z → B)

The multiple choice of elements (here, a and b) in A which map to 1 in B
is precisely what allows the overall composition to be equal, even when
g₁ ≠ g₂. This provides insight into a proof of "f is a monomorphism
implies that f is an injection". If you suppose that f is a monomorphism
and not an injection, you can easily reach a contradiction, since you
can use elements like 1 and 2 that both map to the same a to construct a
counter-example to the implication that defines a monomorphism.

Example of failing the epimorphism definition for a non-surjection

Epimorphism definition:

f : A → B is an epimorphism  ⇔  ∀Z ∈ Obj(𝒞), ∀g₁, g₂ ∈ Hom(B, Z), (g₁ ∘ f = g₂ ∘ f ⇒ g₁ = g₂)

g₁ : Z → A = {(x, a), (y, c)}
g₂ : Z → A = {(x, b), (y, c)}

f ∘ g₁ = f ∘ g₂ = {(x, 1), (y, 2)} ∈ (Z → B)

A = {a, b}
B = {1, 2, 3}
Z = {x, y}
f : A → B = {(a, 1), (b, 2)}, not surjective

g₁ : B → Z = {(1, x), (2, y), (3, x)}
g₂ : B → Z = {(1, x), (2, y), (3, y)}

g₁ ∘ f = g₂ ∘ f = {(a, x), (b, y)} ∈ (A → Z)

The element 3 in B not being reached by f is precisely that which
provides the opportunity to build g₁ ≠ g₂ such that they compose to the
same result with f, since the output of 3 for them doesn’t affect the
overall composition. This provides insight into a proof of "f is an
epimorphism implies that f is a surjection". If you suppose that f is an
epimorphism and not a surjection, you can easily reach a contradiction,
since you can use elements like 3 that are not reached by f to construct
a counter-example to the implication that defines an epimorphism.

Proofs of mono/inj and epi/surj equivalence

Let f : A → B.

The parts which are "Injection => Monomorphism" and "Surjection =>
Epimorphism" both use the respective sided inverses to prove the
implication.

The other parts use the following tautology to prove the implication by
contradiction. "Suppose that p and ¬q, show that it leads to a
contradiction".

(p ⇒ q) ⇔ ((¬p) ∪ q) ⇔ (¬(p ∩ ¬q))

Injection => Monomorphism

Suppose that f is an injection. It thus has post-inverses.

∃g ∈ (B → A), g ∘ f = id_(A)

From there:

∀Z ∈ Obj(𝒞), ∀a, b ∈ Hom(Z, A),
$$\begin{array}{ccccc} \\
f \circ a = f \circ b & \Rightarrow &  g \circ (f  \circ a) &=&  g \circ (f  \circ b) \\
                      & =           & (g \circ  f) \circ a  &=& (g \circ  f) \circ b  \\
                      & =           &         id_A \circ a  &=&         id_A \circ b  \\
                      & =           &                    a  &=&                    b
\end{array}$$

We conclude that f is also a monomorphism.

Surjection => Epimorphism

Suppose that f is a surjection. It thus has pre-inverses.

∃g ∈ (B → A), f ∘ g = id_(B)

From there:

∀Z ∈ Obj(𝒞), ∀a, b ∈ Hom(B, Z),
$$\begin{array}{ccccc} \\
a \circ f = b \circ f & \Rightarrow & (a \circ  f) \circ g  &=& (b \circ  f) \circ g  \\
                      & =           &  a \circ (f  \circ g) &=&  b \circ (f  \circ g) \\
                      & =           &  a \circ  id_B        &=&  b \circ  id_B        \\
                      & =           &  a                    &=&  b
\end{array}$$

We conclude that f is also an epimorphism.

Monomorphism => Injection

Suppose that f is a monomorphism.

∀Z ∈ Obj(𝒞), ∀g₁, g₂ ∈ Hom(Z, A), f ∘ g₁ = f ∘ g₂ ⇒ g₁ = g₂

Suppose now that f is not an injection. Algebraically, this means that:

∃(x, y) ∈ A²,  such that x ≠ y and f(x) = f(y)

We can construct g₁ and g₂ such that f ∘ g₁ = f ∘ g₂ but g₁ ≠ g₂, using
such a pair (x, y). Thereby, we prove that f is not an monomorphism and
arrive at a contradiction.

(If Z is the empty set, being initial in Set, there is only 1 map into A
(the empty map) and a = b always hold. Therefore, any counterexample to
the epimorphism definition needs to have at least 1 element.)

Let Z = {a}.

g₁(a) = x
g₂(a) = y

Clearly, g₁ ≠ g₂. However, we also have:

f(g₁(a)) = f(x) = f(y) = f(g₂(a)) ⇒ f ∘ g₁ = f ∘ g₂

This means that f is not a monomorphism: contradiction.

Conclusion: f is an injection.

Epimorphism => Surjection

Suppose that f is an epimorphism.

∀Z ∈ Obj(𝒞), ∀g₁, g₂ ∈ Hom(B, Z), g₁ ∘ f = g₂ ∘ f ⇒ g₁ = g₂

Suppose now that f isn’t a surjection. Algebraically, this means that:

∃x ∈ B, x ∉ f(A)

We can construct g₁ and g₂ such that g₁ ∘ f = g₂ ∘ f but g₁ ≠ g₂, using
such an x ∉ f(A). Thereby, we prove that f is not an epimorphism and
arrive at a contradiction.

(If Z is the singleton set, being terminal in Set, there is only 1 map
into Z and a = b always hold. Therefore, any counterexample to the
epimorphism definition needs to have at least 2 elements. We will
however use a 3-element set, since it makes things more intuitive and
pedagogical.)

Let Z = {a, b, c}.

$$g_1 =
\begin{cases}
    \forall x    \in f(A), g_1(x) = a \\
    \forall x \notin f(A), g_1(x) = b
\end{cases}$$

$$g_2 =
\begin{cases}
    \forall x    \in f(A), g_2(x) = a \\
    \forall x \notin f(A), g_2(x) = c
\end{cases}$$

Clearly, g₁ ≠ g₂. However, since A is the domain of f, of g₁ ∘ f, and of
g₂ ∘ f, we have:

g₁ ∘ f = g₂ ∘ f = (x ↦ a) ∈ (A → Z)

This means that f is not an epimorphism: contradiction.

Conclusion: f is a surjection.

Chapter 1, Section 3

On terminal and initial objects in Set

If $\empty$ is initial and { ⋆ } is terminal, it is because a function
in Set (in categorical terms) must always have an output for every
input. Ie, in category theory, all functions are maps ("applications").

Said algebraically:

$$\forall A, B \in \text{Obj}(\bold{Set}), \;
\forall a \in A, \;
\forall f \in \text{Hom}(A, B), \;
\exists f(a) \in B$$

In the case of $\empty$ as the input set, and there is only one function
$f: \empty \to Z$ for any Z: f is the empty mapping. But any
$Z \to \empty$ (expept $\empty \to \empty$) contains no mapping (since
we’d necessarily be ignoring at least one element of Z).

Similarly, in the case of the (unique up-to-isomorphism) singleton set
{ ⋆ } as the output, you’d have multiple functions (precisely 2^(|Z|))
into it, if you could ignore some elements of the input set. However, if
all elements of the input set are required, that leaves you with only
one function possible from Z → { ⋆ }: the function which maps all
elements to ⋆.

Restrictions and extensions of functions, and its consequences on a function’s nature

8 possibilities to study, based on the following binary dichotomies:

-   injection or surjection

-   enlarging or restricting

-   domain or codomain

Note that enlarging the domain sometimes implies enlarging the codomain,
and restricting the codomain sometimes implies restricting the domain.

Legend: Yes, No, Depends

  ------------ ------------- -------------- ------------- --------------
                enlarge dom   restrict dom   enlarge cod   restrict cod
   injection         D             Y              Y             Y
   surjection        Y             D              N             Y
  ------------ ------------- -------------- ------------- --------------

Theorems:

A) if f ∈ (A → B), f injective (resp. surjective), then
∀Z ⊆ B, f̂ ∈ ((f^( − 1)(Z) ⊆ A) → Z), f̂ = f|_(f^( − 1)(Z)), the
restriction of the function to the corresponding smaller codomain, is
also an injection (resp. surjection).

B) if f ∈ (A → B), f injective (resp. surjective), then
∀Z ⊇ B, f̂ ∈ (A → Z), f̂ = ι ∘ f (with the ι the canonical injection of
b ∈ B into its superset Z), is also an injection (resp. is never a
surjection).

C) if f ∈ (A → B), f injective, then
∀Z ⊆ A, f̂ ∈ (Z → B), f = ι_((Z → A)) ∘ f̂, we have that f̂ is also an
injection. However, one can construct Z ⊆ A such that f stops being a
surjection.

D) if f ∈ (A → B), f surjective, then
∀Z ⊇ A, f̂ ∈ (Z → (B ∪ f(Z))), f = ι_((Z → A)) ∘ f̂, we have that f̂ is
also a surjection. However, one can construct Z ⊆ A such that f stops
being a injection.

Proof: TODO
